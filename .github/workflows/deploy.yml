name: CI/CD Pipeline on: push: branches: [ main ] jobs: build-deploy: runs-on: ubuntu-latest env: AWS_REGION: us-east-1 S3_BUCKET: jenkins-artifacts-logs steps: - name: Checkout Code uses: actions/checkout@v4 - name: Configure AWS Credentials uses: aws-actions/configure-aws-credentials@v2 with: aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} aws-region: ${{ env.AWS_REGION }} - name: Set up Docker uses: docker/setup-buildx-action@v3 - name: Build Docker Image run: docker build -t public-health-app:${{ github.run_number }} . # Save docker image as a tarball for sending to EC2 - name: Save Docker Image run: docker save public-health-app:${{ github.run_number }} > app.tar # Upload image to EC2 via SCP - name: Upload Image to EC2 uses: appleboy/scp-action@master with: host: ${{ secrets.EC2_HOST }} username: ec2-user key: ${{ secrets.EC2_SSH_KEY }} source: "app.tar" target: "~/" # Run container on EC2 - name: Deploy on EC2 uses: appleboy/ssh-action@master with: host: ${{ secrets.EC2_HOST }} username: ec2-user key: ${{ secrets.EC2_SSH_KEY }} script: | docker load < app.tar docker stop health-app || true docker rm health-app || true docker run -d -p 8080:8080 --name health-app public-health-app:${{ github.run_number }} docker logs health-app > app.log # Download logs from EC2 to runner - name: Download Logs from EC2 uses: appleboy/scp-action@master with: host: ${{ secrets.EC2_HOST }} username: ec2-user key: ${{ secrets.EC2_SSH_KEY }} source: "app.log" target: "./" # Upload logs to S3 - name: Upload Logs to S3 run: aws s3 cp app.log s3://${{ env.S3_BUCKET }}/logs/app-${{ github.run_number }}.log # Upload artifacts to S3 - name: Upload Artifacts run: | mkdir -p build cp -r * build/ || true aws s3 cp build/ s3://${{ env.S3_BUCKET }}/artifacts/${{ github.run_number }}/ --recursive
